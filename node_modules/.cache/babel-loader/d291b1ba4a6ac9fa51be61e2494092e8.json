{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\myinsure-app\\\\src\\\\context\\\\GlobalState.js\";\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\"; // import {\n//   encryptData,\n//   decryptData,\n//   addCookie,\n//   getCookie,\n//   deleteCookie,\n// } from \"../helpers/Functions\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  to_compare: [],\n  car_info: {\n    make: null,\n    model: null,\n    year: null,\n    fuel: null,\n    value: null,\n    mobile: null\n  },\n  inc_benefits: {\n    excess: true,\n    pvt: true,\n    phcf: true,\n    aa_rescue: false\n  }\n};\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function updateExcess() {\n    let benefits = JSON.parse(localStorage.inc_benefits);\n    benefits.excess = !state.inc_benefits.excess;\n    dispatch({\n      type: \"UPDATE_BENEFITS\",\n      payload: benefits\n    });\n  }\n\n  async function updatePvt() {\n    let benefits = JSON.parse(localStorage.inc_benefits);\n    benefits.pvt = !state.inc_benefits.pvt;\n    dispatch({\n      type: \"UPDATE_BENEFITS\",\n      payload: benefits\n    });\n  }\n\n  async function updateAA_Rescue() {\n    let benefits = JSON.parse(localStorage.inc_benefits);\n    benefits.aa_rescue = !state.inc_benefits.aa_rescue;\n    dispatch({\n      type: \"UPDATE_BENEFITS\",\n      payload: benefits\n    });\n  }\n\n  async function updatePHCF() {\n    let benefits = JSON.parse(localStorage.inc_benefits);\n    benefits.phcf = !state.inc_benefits.phcf;\n    dispatch({\n      type: \"UPDATE_BENEFITS\",\n      payload: benefits\n    });\n  }\n\n  async function resetBenefits() {\n    let benefits = {\n      excess: true,\n      pvt: true,\n      phcf: true,\n      aa_rescue: false\n    };\n    dispatch({\n      type: \"UPDATE_BENEFITS\",\n      payload: benefits\n    });\n  }\n\n  async function addToComparisonList(code, name, company) {\n    let comparison = JSON.parse(localStorage.compare);\n    let element = {\n      name: code\n    };\n    const exists = comparison.some(item => item.code === element.name);\n\n    if (!exists) {\n      let cart;\n      const item = {\n        code,\n        name,\n        company\n      };\n      cart = JSON.parse(localStorage.compare);\n      cart = [...cart, item];\n      localStorage.compare = JSON.stringify(cart);\n      getComparisonList();\n    } else {\n      console.log(\"item already exists in the cart\");\n    }\n  }\n\n  async function getComparisonList() {\n    const toCompare = localStorage.compare;\n\n    if (toCompare) {\n      dispatch({\n        type: \"SET_COMPARISON_ITEMS\",\n        payload: JSON.parse(toCompare)\n      });\n    } else {\n      localStorage.compare = JSON.stringify([]);\n    }\n  }\n\n  async function removeFromComparisonList(code) {\n    let cart = JSON.parse(localStorage.compare);\n    cart = cart.filter(item => item.code !== code);\n\n    if (cart.length < 1) {\n      clearComparisonList();\n    } else {\n      localStorage.compare = JSON.stringify(cart);\n      getComparisonList();\n    }\n  }\n\n  async function clearComparisonList() {\n    localStorage.compare = JSON.stringify([]);\n    getComparisonList();\n  }\n\n  async function updateCarInfo(info) {\n    dispatch({\n      type: \"SET_CAR_INFO\",\n      payload: info\n    });\n    localStorage.car_info = JSON.stringify(info);\n    clearComparisonList();\n  }\n\n  async function getCarInfo() {\n    if (localStorage.hasOwnProperty(\"car_info\")) {\n      updateCarInfo(JSON.parse(localStorage.car_info));\n    } else {\n      localStorage.setItem(\"car_info\", JSON.stringify(state.car_info));\n    }\n  }\n\n  async function getPlanBenefits() {\n    let benefits;\n\n    if (localStorage.hasOwnProperty(\"inc_benefits\")) {\n      benefits = JSON.parse(localStorage.inc_benefits);\n    } else {\n      benefits = state.inc_benefits;\n      localStorage.setItem(\"inc_benefits\", JSON.stringify(state.inc_benefits));\n    }\n\n    dispatch({\n      type: \"UPDATE_BENEFITS\",\n      payload: benefits\n    });\n  }\n\n  useEffect(() => {\n    getCarInfo();\n    getComparisonList();\n    getPlanBenefits(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      updateCarInfo,\n      getCarInfo,\n      addToComparisonList,\n      getComparisonList,\n      removeFromComparisonList,\n      clearComparisonList,\n      updateExcess,\n      updatePvt,\n      updateAA_Rescue,\n      updatePHCF,\n      resetBenefits,\n      car_info: state.car_info,\n      to_compare: state.to_compare,\n      inc_benefits: state.inc_benefits\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["E:/React/myinsure-app/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","AppReducer","initialState","to_compare","car_info","make","model","year","fuel","value","mobile","inc_benefits","excess","pvt","phcf","aa_rescue","GlobalContext","GlobalProvider","children","state","dispatch","updateExcess","benefits","JSON","parse","localStorage","type","payload","updatePvt","updateAA_Rescue","updatePHCF","resetBenefits","addToComparisonList","code","name","company","comparison","compare","element","exists","some","item","cart","stringify","getComparisonList","console","log","toCompare","removeFromComparisonList","filter","length","clearComparisonList","updateCarInfo","info","getCarInfo","hasOwnProperty","setItem","getPlanBenefits"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n// import {\r\n//   encryptData,\r\n//   decryptData,\r\n//   addCookie,\r\n//   getCookie,\r\n//   deleteCookie,\r\n// } from \"../helpers/Functions\";\r\n\r\nconst initialState = {\r\n  to_compare: [],\r\n  car_info: {\r\n    make: null,\r\n    model: null,\r\n    year: null,\r\n    fuel: null,\r\n    value: null,\r\n    mobile: null,\r\n  },\r\n  inc_benefits: { excess: true, pvt: true, phcf: true, aa_rescue: false },\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  async function updateExcess() {\r\n    let benefits = JSON.parse(localStorage.inc_benefits);\r\n\r\n    benefits.excess = !state.inc_benefits.excess;\r\n\r\n    dispatch({\r\n      type: \"UPDATE_BENEFITS\",\r\n      payload: benefits,\r\n    });\r\n  }\r\n\r\n  async function updatePvt() {\r\n    let benefits = JSON.parse(localStorage.inc_benefits);\r\n\r\n    benefits.pvt = !state.inc_benefits.pvt;\r\n\r\n    dispatch({\r\n      type: \"UPDATE_BENEFITS\",\r\n      payload: benefits,\r\n    });\r\n  }\r\n\r\n  async function updateAA_Rescue() {\r\n    let benefits = JSON.parse(localStorage.inc_benefits);\r\n\r\n    benefits.aa_rescue = !state.inc_benefits.aa_rescue;\r\n\r\n    dispatch({\r\n      type: \"UPDATE_BENEFITS\",\r\n      payload: benefits,\r\n    });\r\n  }\r\n\r\n  async function updatePHCF() {\r\n    let benefits = JSON.parse(localStorage.inc_benefits);\r\n\r\n    benefits.phcf = !state.inc_benefits.phcf;\r\n\r\n    dispatch({\r\n      type: \"UPDATE_BENEFITS\",\r\n      payload: benefits,\r\n    });\r\n  }\r\n\r\n  async function resetBenefits() {\r\n    let benefits = {\r\n      excess: true,\r\n      pvt: true,\r\n      phcf: true,\r\n      aa_rescue: false,\r\n    };\r\n\r\n    dispatch({\r\n      type: \"UPDATE_BENEFITS\",\r\n      payload: benefits,\r\n    });\r\n  }\r\n\r\n  async function addToComparisonList(code, name, company) {\r\n    let comparison = JSON.parse(localStorage.compare);\r\n\r\n    let element = { name: code };\r\n\r\n    const exists = comparison.some((item) => item.code === element.name);\r\n\r\n    if (!exists) {\r\n      let cart;\r\n\r\n      const item = {\r\n        code,\r\n        name,\r\n        company,\r\n      };\r\n\r\n      cart = JSON.parse(localStorage.compare);\r\n\r\n      cart = [...cart, item];\r\n\r\n      localStorage.compare = JSON.stringify(cart);\r\n\r\n      getComparisonList();\r\n    } else {\r\n      console.log(\"item already exists in the cart\");\r\n    }\r\n  }\r\n\r\n  async function getComparisonList() {\r\n    const toCompare = localStorage.compare;\r\n\r\n    if (toCompare) {\r\n      dispatch({\r\n        type: \"SET_COMPARISON_ITEMS\",\r\n        payload: JSON.parse(toCompare),\r\n      });\r\n    } else {\r\n      localStorage.compare = JSON.stringify([]);\r\n    }\r\n  }\r\n  async function removeFromComparisonList(code) {\r\n    let cart = JSON.parse(localStorage.compare);\r\n\r\n    cart = cart.filter((item) => item.code !== code);\r\n\r\n    if (cart.length < 1) {\r\n      clearComparisonList();\r\n    } else {\r\n      localStorage.compare = JSON.stringify(cart);\r\n\r\n      getComparisonList();\r\n    }\r\n  }\r\n\r\n  async function clearComparisonList() {\r\n    localStorage.compare = JSON.stringify([]);\r\n\r\n    getComparisonList();\r\n  }\r\n\r\n  async function updateCarInfo(info) {\r\n    dispatch({\r\n      type: \"SET_CAR_INFO\",\r\n      payload: info,\r\n    });\r\n\r\n    localStorage.car_info = JSON.stringify(info);\r\n    clearComparisonList();\r\n  }\r\n\r\n  async function getCarInfo() {\r\n    if (localStorage.hasOwnProperty(\"car_info\")) {\r\n      updateCarInfo(JSON.parse(localStorage.car_info));\r\n    } else {\r\n      localStorage.setItem(\"car_info\", JSON.stringify(state.car_info));\r\n    }\r\n  }\r\n\r\n  async function getPlanBenefits() {\r\n    let benefits;\r\n\r\n    if (localStorage.hasOwnProperty(\"inc_benefits\")) {\r\n      benefits = JSON.parse(localStorage.inc_benefits);\r\n    } else {\r\n      benefits = state.inc_benefits;\r\n      localStorage.setItem(\"inc_benefits\", JSON.stringify(state.inc_benefits));\r\n    }\r\n\r\n    dispatch({\r\n      type: \"UPDATE_BENEFITS\",\r\n      payload: benefits,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCarInfo();\r\n    getComparisonList();\r\n    getPlanBenefits();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        updateCarInfo,\r\n        getCarInfo,\r\n        addToComparisonList,\r\n        getComparisonList,\r\n        removeFromComparisonList,\r\n        clearComparisonList,\r\n        updateExcess,\r\n        updatePvt,\r\n        updateAA_Rescue,\r\n        updatePHCF,\r\n        resetBenefits,\r\n\r\n        car_info: state.car_info,\r\n        to_compare: state.to_compare,\r\n        inc_benefits: state.inc_benefits,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}