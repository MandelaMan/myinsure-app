{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\myinsure-app\\\\src\\\\context\\\\GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\"; // import {\n//   encryptData,\n//   decryptData,\n//   addCookie,\n//   getCookie,\n//   deleteCookie,\n// } from \"../helpers/Functions\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  to_compare: [],\n  car_info: {\n    make: undefined,\n    model: undefined,\n    year: undefined,\n    fuel: undefined,\n    value: 0,\n    phone: undefined\n  }\n};\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function addToComparisonList() {}\n\n  async function getComparisonList() {\n    const info = localStorage.car_info;\n\n    if (info) {\n      updateCarInfo(JSON.parse(info));\n    }\n  }\n\n  async function removeFromComparisonList() {}\n\n  async function updateCarInfo(info) {\n    dispatch({\n      type: \"SET_CAR_INFO\",\n      payload: info\n    });\n    localStorage.car_info = JSON.stringify(info);\n  }\n\n  async function getCarInfo() {\n    const info = localStorage.car_info;\n\n    if (info) {\n      updateCarInfo(JSON.parse(info));\n    }\n  }\n\n  useEffect(() => {\n    getCarInfo(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      updateCarInfo,\n      getCarInfo,\n      addToComparisonList,\n      getComparisonList,\n      removeFromComparisonList,\n      car_info: state.car_info,\n      to_compare: state.to_compare\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["E:/React/myinsure-app/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","AppReducer","initialState","to_compare","car_info","make","undefined","model","year","fuel","value","phone","GlobalContext","GlobalProvider","children","state","dispatch","addToComparisonList","getComparisonList","info","localStorage","updateCarInfo","JSON","parse","removeFromComparisonList","type","payload","stringify","getCarInfo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,SADE;AAERC,IAAAA,KAAK,EAAED,SAFC;AAGRE,IAAAA,IAAI,EAAEF,SAHE;AAIRG,IAAAA,IAAI,EAAEH,SAJE;AAKRI,IAAAA,KAAK,EAAE,CALC;AAMRC,IAAAA,KAAK,EAAEL;AANC;AAFS,CAArB;AAYA,OAAO,MAAMM,aAAa,gBAAGd,aAAa,CAACI,YAAD,CAAnC;AAEP,OAAO,MAAMW,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACE,UAAD,EAAaC,YAAb,CAApC;;AAEA,iBAAee,mBAAf,GAAqC,CAAE;;AACvC,iBAAeC,iBAAf,GAAmC;AACjC,UAAMC,IAAI,GAAGC,YAAY,CAAChB,QAA1B;;AAEA,QAAIe,IAAJ,EAAU;AACRE,MAAAA,aAAa,CAACC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAD,CAAb;AACD;AACF;;AACD,iBAAeK,wBAAf,GAA0C,CAAE;;AAE5C,iBAAeH,aAAf,CAA6BF,IAA7B,EAAmC;AACjCH,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAEP;AAFF,KAAD,CAAR;AAKAC,IAAAA,YAAY,CAAChB,QAAb,GAAwBkB,IAAI,CAACK,SAAL,CAAeR,IAAf,CAAxB;AACD;;AAED,iBAAeS,UAAf,GAA4B;AAC1B,UAAMT,IAAI,GAAGC,YAAY,CAAChB,QAA1B;;AAEA,QAAIe,IAAJ,EAAU;AACRE,MAAAA,aAAa,CAACC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAD,CAAb;AACD;AACF;;AAEDnB,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,UAAU,GADI,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLP,MAAAA,aADK;AAELO,MAAAA,UAFK;AAGLX,MAAAA,mBAHK;AAILC,MAAAA,iBAJK;AAKLM,MAAAA,wBALK;AAOLpB,MAAAA,QAAQ,EAAEW,KAAK,CAACX,QAPX;AAQLD,MAAAA,UAAU,EAAEY,KAAK,CAACZ;AARb,KADT;AAAA,cAYGW;AAZH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnDM;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n// import {\r\n//   encryptData,\r\n//   decryptData,\r\n//   addCookie,\r\n//   getCookie,\r\n//   deleteCookie,\r\n// } from \"../helpers/Functions\";\r\n\r\nconst initialState = {\r\n  to_compare: [],\r\n  car_info: {\r\n    make: undefined,\r\n    model: undefined,\r\n    year: undefined,\r\n    fuel: undefined,\r\n    value: 0,\r\n    phone: undefined,\r\n  },\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  async function addToComparisonList() {}\r\n  async function getComparisonList() {\r\n    const info = localStorage.car_info;\r\n\r\n    if (info) {\r\n      updateCarInfo(JSON.parse(info));\r\n    }\r\n  }\r\n  async function removeFromComparisonList() {}\r\n\r\n  async function updateCarInfo(info) {\r\n    dispatch({\r\n      type: \"SET_CAR_INFO\",\r\n      payload: info,\r\n    });\r\n\r\n    localStorage.car_info = JSON.stringify(info);\r\n  }\r\n\r\n  async function getCarInfo() {\r\n    const info = localStorage.car_info;\r\n\r\n    if (info) {\r\n      updateCarInfo(JSON.parse(info));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCarInfo();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        updateCarInfo,\r\n        getCarInfo,\r\n        addToComparisonList,\r\n        getComparisonList,\r\n        removeFromComparisonList,\r\n\r\n        car_info: state.car_info,\r\n        to_compare: state.to_compare,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}