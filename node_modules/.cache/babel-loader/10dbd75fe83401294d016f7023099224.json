{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\myinsure-app\\\\src\\\\context\\\\GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\"; // import {\n//   encryptData,\n//   decryptData,\n//   addCookie,\n//   getCookie,\n//   deleteCookie,\n// } from \"../helpers/Functions\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  to_compare: [{}, {}, {}, {}],\n  car_info: {\n    make: undefined,\n    model: undefined,\n    year: undefined,\n    fuel: undefined,\n    value: 0,\n    phone: undefined\n  }\n};\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function addToComparisonList(code, name, price, company) {\n    let comparison = JSON.parse(localStorage.compare);\n    let element = {\n      name: code\n    };\n    const exists = comparison.some(item => item.code === element.name);\n\n    if (!exists) {\n      let cart;\n      const item = {\n        code,\n        name,\n        price,\n        company\n      };\n      cart = JSON.parse(localStorage.compare);\n      cart = [...cart, item];\n      localStorage.compare = JSON.stringify(cart);\n      getComparisonList();\n    } else {\n      console.log(\"item already exists in the cart\");\n    }\n  }\n\n  async function getComparisonList() {\n    const toCompare = localStorage.compare;\n\n    if (toCompare) {\n      dispatch({\n        type: \"SET_COMPARISON_ITEMS\",\n        payload: JSON.parse(toCompare)\n      });\n    } else {\n      localStorage.compare = JSON.stringify([]);\n    }\n  }\n\n  async function removeFromComparisonList(code) {\n    let cart = JSON.parse(localStorage.compare);\n    console.log(cart.length);\n    cart = cart.filter(item => item.code !== code);\n    localStorage.compare = JSON.stringify(cart);\n    getComparisonList();\n  }\n\n  async function clearComparisonList() {\n    localStorage.compare = JSON.stringify([]);\n    getComparisonList();\n  }\n\n  async function updateCarInfo(info) {\n    dispatch({\n      type: \"SET_CAR_INFO\",\n      payload: info\n    });\n    localStorage.car_info = JSON.stringify(info);\n  }\n\n  async function getCarInfo() {\n    const info = localStorage.car_info;\n\n    if (info) {\n      updateCarInfo(JSON.parse(info));\n    }\n  }\n\n  useEffect(() => {\n    getCarInfo();\n    getComparisonList(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      updateCarInfo,\n      getCarInfo,\n      addToComparisonList,\n      getComparisonList,\n      removeFromComparisonList,\n      clearComparisonList,\n      car_info: state.car_info,\n      to_compare: state.to_compare\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["E:/React/myinsure-app/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","AppReducer","initialState","to_compare","car_info","make","undefined","model","year","fuel","value","phone","GlobalContext","GlobalProvider","children","state","dispatch","addToComparisonList","code","name","price","company","comparison","JSON","parse","localStorage","compare","element","exists","some","item","cart","stringify","getComparisonList","console","log","toCompare","type","payload","removeFromComparisonList","length","filter","clearComparisonList","updateCarInfo","info","getCarInfo"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n// import {\r\n//   encryptData,\r\n//   decryptData,\r\n//   addCookie,\r\n//   getCookie,\r\n//   deleteCookie,\r\n// } from \"../helpers/Functions\";\r\n\r\nconst initialState = {\r\n  to_compare: [{}, {}, {}, {}],\r\n  car_info: {\r\n    make: undefined,\r\n    model: undefined,\r\n    year: undefined,\r\n    fuel: undefined,\r\n    value: 0,\r\n    phone: undefined,\r\n  },\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  async function addToComparisonList(code, name, price, company) {\r\n    let comparison = JSON.parse(localStorage.compare);\r\n\r\n    let element = { name: code };\r\n\r\n    const exists = comparison.some((item) => item.code === element.name);\r\n\r\n    if (!exists) {\r\n      let cart;\r\n\r\n      const item = {\r\n        code,\r\n        name,\r\n        price,\r\n        company,\r\n      };\r\n\r\n      cart = JSON.parse(localStorage.compare);\r\n\r\n      cart = [...cart, item];\r\n\r\n      localStorage.compare = JSON.stringify(cart);\r\n\r\n      getComparisonList();\r\n    } else {\r\n      console.log(\"item already exists in the cart\");\r\n    }\r\n  }\r\n\r\n  async function getComparisonList() {\r\n    const toCompare = localStorage.compare;\r\n\r\n    if (toCompare) {\r\n      dispatch({\r\n        type: \"SET_COMPARISON_ITEMS\",\r\n        payload: JSON.parse(toCompare),\r\n      });\r\n    } else {\r\n      localStorage.compare = JSON.stringify([]);\r\n    }\r\n  }\r\n  async function removeFromComparisonList(code) {\r\n    let cart = JSON.parse(localStorage.compare);\r\n\r\n    console.log(cart.length);\r\n\r\n    cart = cart.filter((item) => item.code !== code);\r\n\r\n    localStorage.compare = JSON.stringify(cart);\r\n\r\n    getComparisonList();\r\n  }\r\n\r\n  async function clearComparisonList() {\r\n    localStorage.compare = JSON.stringify([]);\r\n\r\n    getComparisonList();\r\n  }\r\n\r\n  async function updateCarInfo(info) {\r\n    dispatch({\r\n      type: \"SET_CAR_INFO\",\r\n      payload: info,\r\n    });\r\n\r\n    localStorage.car_info = JSON.stringify(info);\r\n  }\r\n\r\n  async function getCarInfo() {\r\n    const info = localStorage.car_info;\r\n\r\n    if (info) {\r\n      updateCarInfo(JSON.parse(info));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCarInfo();\r\n    getComparisonList();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        updateCarInfo,\r\n        getCarInfo,\r\n        addToComparisonList,\r\n        getComparisonList,\r\n        removeFromComparisonList,\r\n        clearComparisonList,\r\n\r\n        car_info: state.car_info,\r\n        to_compare: state.to_compare,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}