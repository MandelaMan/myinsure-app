{"ast":null,"code":"import CryptoJS from \"crypto-js\";\nimport Cookies from \"js-cookie\";\nexport const getCookie = cookie_name => {\n  return Cookies.get(cookie_name);\n};\nexport const deleteCookie = cookie_name => {\n  return Cookies.remove(cookie_name);\n};\nexport const addCookie = (payload, cookie_name) => {\n  var date = new Date();\n  var minutes = 500;\n  date.setTime(date.getTime() + minutes * 60 * 10000);\n  Cookies.set(cookie_name, payload, {\n    expires: date,\n    samesite: \"None\"\n  });\n};\nexport const encryptData = data => {\n  const ciphertext = CryptoJS.AES.encrypt(JSON.stringify(data), process.env.REACT_APP_SECRET).toString();\n  return ciphertext;\n};\nexport const decryptData = ciphertext => {\n  //check decrypt\n  var bytes = CryptoJS.AES.decrypt(ciphertext, process.env.REACT_APP_SECRET);\n  var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n  return decryptedData;\n};\nexport const addCommas = num => {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n};\nexport const pageVariants = {\n  hidden: {\n    opacity: 0\n  },\n  visible: {\n    opacity: 1,\n    transition: {\n      delay: 0.25\n    }\n  },\n  exit: {\n    ease: \"easeInOut\",\n    opacity: 0\n  }\n};\nexport const checkEmptiness = content => {\n  return typeof content === \"undefined\" || content === null;\n};\nexport const sanitizeProductName = name => {\n  return name.replace(/\\s+/g, \"-\").toLowerCase();\n};","map":{"version":3,"sources":["C:/React/myinsure-app/src/helpers/Functions.js"],"names":["CryptoJS","Cookies","getCookie","cookie_name","get","deleteCookie","remove","addCookie","payload","date","Date","minutes","setTime","getTime","set","expires","samesite","encryptData","data","ciphertext","AES","encrypt","JSON","stringify","process","env","REACT_APP_SECRET","toString","decryptData","bytes","decrypt","decryptedData","parse","enc","Utf8","addCommas","num","replace","pageVariants","hidden","opacity","visible","transition","delay","exit","ease","checkEmptiness","content","sanitizeProductName","name","toLowerCase"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,SAAS,GAAIC,WAAD,IAAiB;AACxC,SAAOF,OAAO,CAACG,GAAR,CAAYD,WAAZ,CAAP;AACD,CAFM;AAIP,OAAO,MAAME,YAAY,GAAIF,WAAD,IAAiB;AAC3C,SAAOF,OAAO,CAACK,MAAR,CAAeH,WAAf,CAAP;AACD,CAFM;AAIP,OAAO,MAAMI,SAAS,GAAG,CAACC,OAAD,EAAUL,WAAV,KAA0B;AACjD,MAAIM,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,MAAIC,OAAO,GAAG,GAAd;AAEAF,EAAAA,IAAI,CAACG,OAAL,CAAaH,IAAI,CAACI,OAAL,KAAiBF,OAAO,GAAG,EAAV,GAAe,KAA7C;AAEAV,EAAAA,OAAO,CAACa,GAAR,CAAYX,WAAZ,EAAyBK,OAAzB,EAAkC;AAChCO,IAAAA,OAAO,EAAEN,IADuB;AAEhCO,IAAAA,QAAQ,EAAE;AAFsB,GAAlC;AAID,CAVM;AAYP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,QAAMC,UAAU,GAAGnB,QAAQ,CAACoB,GAAT,CAAaC,OAAb,CACjBC,IAAI,CAACC,SAAL,CAAeL,IAAf,CADiB,EAEjBM,OAAO,CAACC,GAAR,CAAYC,gBAFK,EAGjBC,QAHiB,EAAnB;AAKA,SAAOR,UAAP;AACD,CAPM;AASP,OAAO,MAAMS,WAAW,GAAIT,UAAD,IAAgB;AACzC;AACA,MAAIU,KAAK,GAAG7B,QAAQ,CAACoB,GAAT,CAAaU,OAAb,CAAqBX,UAArB,EAAiCK,OAAO,CAACC,GAAR,CAAYC,gBAA7C,CAAZ;AACA,MAAIK,aAAa,GAAGT,IAAI,CAACU,KAAL,CAAWH,KAAK,CAACF,QAAN,CAAe3B,QAAQ,CAACiC,GAAT,CAAaC,IAA5B,CAAX,CAApB;AAEA,SAAOH,aAAP;AACD,CANM;AAQP,OAAO,MAAMI,SAAS,GAAIC,GAAD,IAAS;AAChC,SAAOA,GAAG,CAACT,QAAJ,GAAeU,OAAf,CAAuB,yBAAvB,EAAkD,KAAlD,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GADkB;AAI1BC,EAAAA,OAAO,EAAE;AACPD,IAAAA,OAAO,EAAE,CADF;AAEPE,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AADG;AAFL,GAJiB;AAU1BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,WADF;AAEJL,IAAAA,OAAO,EAAE;AAFL;AAVoB,CAArB;AAgBP,OAAO,MAAMM,cAAc,GAAIC,OAAD,IAAa;AACzC,SAAO,OAAOA,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,KAAK,IAArD;AACD,CAFM;AAIP,OAAO,MAAMC,mBAAmB,GAAIC,IAAD,IAAU;AAC3C,SAAOA,IAAI,CAACZ,OAAL,CAAa,MAAb,EAAqB,GAArB,EAA0Ba,WAA1B,EAAP;AACD,CAFM","sourcesContent":["import CryptoJS from \"crypto-js\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport const getCookie = (cookie_name) => {\r\n  return Cookies.get(cookie_name);\r\n};\r\n\r\nexport const deleteCookie = (cookie_name) => {\r\n  return Cookies.remove(cookie_name);\r\n};\r\n\r\nexport const addCookie = (payload, cookie_name) => {\r\n  var date = new Date();\r\n  var minutes = 500;\r\n\r\n  date.setTime(date.getTime() + minutes * 60 * 10000);\r\n\r\n  Cookies.set(cookie_name, payload, {\r\n    expires: date,\r\n    samesite: \"None\",\r\n  });\r\n};\r\n\r\nexport const encryptData = (data) => {\r\n  const ciphertext = CryptoJS.AES.encrypt(\r\n    JSON.stringify(data),\r\n    process.env.REACT_APP_SECRET\r\n  ).toString();\r\n\r\n  return ciphertext;\r\n};\r\n\r\nexport const decryptData = (ciphertext) => {\r\n  //check decrypt\r\n  var bytes = CryptoJS.AES.decrypt(ciphertext, process.env.REACT_APP_SECRET);\r\n  var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n\r\n  return decryptedData;\r\n};\r\n\r\nexport const addCommas = (num) => {\r\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n};\r\n\r\nexport const pageVariants = {\r\n  hidden: {\r\n    opacity: 0,\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.25,\r\n    },\r\n  },\r\n  exit: {\r\n    ease: \"easeInOut\",\r\n    opacity: 0,\r\n  },\r\n};\r\n\r\nexport const checkEmptiness = (content) => {\r\n  return typeof content === \"undefined\" || content === null;\r\n};\r\n\r\nexport const sanitizeProductName = (name) => {\r\n  return name.replace(/\\s+/g, \"-\").toLowerCase();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}