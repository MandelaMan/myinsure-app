{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\myinsure-app\\\\src\\\\context\\\\GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport { encryptData, decryptData, addCookie, getCookie, deleteCookie } from \"../helpers/Functions\";\nimport { Info } from \"react-feather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  car_info: {\n    make: undefined,\n    model: undefined,\n    year: undefined,\n    fuel: undefined,\n    value: 0,\n    phone: undefined\n  }\n};\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function updateCarInfo(info) {\n    // const info = getCookie(\"car_info\");\n    dispatch({\n      type: \"SET_CAR_INFO\",\n      payload: info\n    });\n    localStorage.car_info = JSON.stringify(info);\n  }\n\n  useEffect(() => {\n    const info = localStorage.car_info;\n\n    if (info) {\n      updateCarInfo(JSON.parse(info));\n    } // eslint-disable-next-line\n\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      updateCarInfo,\n      car_info: state.car_info\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["C:/React/myinsure-app/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","AppReducer","encryptData","decryptData","addCookie","getCookie","deleteCookie","Info","initialState","car_info","make","undefined","model","year","fuel","value","phone","GlobalContext","GlobalProvider","children","state","dispatch","updateCarInfo","info","type","payload","localStorage","JSON","stringify","parse"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SACEC,WADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,YALF,QAMO,sBANP;AAOA,SAASC,IAAT,QAAqB,eAArB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,SADE;AAERC,IAAAA,KAAK,EAAED,SAFC;AAGRE,IAAAA,IAAI,EAAEF,SAHE;AAIRG,IAAAA,IAAI,EAAEH,SAJE;AAKRI,IAAAA,KAAK,EAAE,CALC;AAMRC,IAAAA,KAAK,EAAEL;AANC;AADS,CAArB;AAWA,OAAO,MAAMM,aAAa,gBAAGnB,aAAa,CAACU,YAAD,CAAnC;AAEP,OAAO,MAAMU,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACE,UAAD,EAAaO,YAAb,CAApC;;AAEA,iBAAec,aAAf,CAA6BC,IAA7B,EAAmC;AACjC;AAEAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACjB,QAAb,GAAwBkB,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAxB;AACD;;AAEDvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,IAAI,GAAGG,YAAY,CAACjB,QAA1B;;AAEA,QAAIc,IAAJ,EAAU;AACRD,MAAAA,aAAa,CAACK,IAAI,CAACE,KAAL,CAAWN,IAAX,CAAD,CAAb;AACD,KALa,CAMd;;AACD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,aADK;AAGLb,MAAAA,QAAQ,EAAEW,KAAK,CAACX;AAHX,KADT;AAAA,cAOGU;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlCM;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\nimport {\r\n  encryptData,\r\n  decryptData,\r\n  addCookie,\r\n  getCookie,\r\n  deleteCookie,\r\n} from \"../helpers/Functions\";\r\nimport { Info } from \"react-feather\";\r\n\r\nconst initialState = {\r\n  car_info: {\r\n    make: undefined,\r\n    model: undefined,\r\n    year: undefined,\r\n    fuel: undefined,\r\n    value: 0,\r\n    phone: undefined,\r\n  },\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  async function updateCarInfo(info) {\r\n    // const info = getCookie(\"car_info\");\r\n\r\n    dispatch({\r\n      type: \"SET_CAR_INFO\",\r\n      payload: info,\r\n    });\r\n\r\n    localStorage.car_info = JSON.stringify(info);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const info = localStorage.car_info;\r\n\r\n    if (info) {\r\n      updateCarInfo(JSON.parse(info));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        updateCarInfo,\r\n\r\n        car_info: state.car_info,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}